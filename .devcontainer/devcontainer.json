{
    "name": "Python Development",
    "build": {
        "dockerfile": "Dockerfile",
        "context": ".."
    },
    "customizations": {
        "vscode": {
            "settings": {
                "editor.formatOnSave": true,
                "editor.codeActionsOnSave": {
                    "source.organizeImports": "explicit"
                },
                "python.defaultInterpreterPath": "/usr/local/bin/python",
                "python.languageServer": "Pylance",
                "python.analysis.typeCheckingMode": "basic",
                "python.formatting.provider": "black",
                "python.formatting.blackPath": "/usr/local/bin/black",
                "python.linting.enabled": true,
                "python.linting.flake8Enabled": true,
                "python.linting.flake8Path": "/usr/local/bin/flake8",
                "python.linting.mypyEnabled": true,
                "python.linting.mypyPath": "/usr/local/bin/mypy",
                "python.testing.pytestEnabled": true,
                "python.testing.pytestPath": "/usr/local/bin/pytest",
                "python.testing.pytestArgs": [
                    "tests"
                ],
                "[python]": {
                    "editor.tabSize": 4,
                    "editor.insertSpaces": true,
                    "editor.wordBasedSuggestions": "off"
                }
            },
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "ms-azuretools.vscode-docker",
                "ms-toolsai.jupyter",
                "njpwerner.autodocstring",
                "mtxr.sqltools",
                "streetsidesoftware.code-spell-checker",
                "matangover.mypy",
                "charliermarsh.ruff",
                "ms-python.black-formatter",
                "eamodio.gitlens",
                "oderwat.indent-rainbow"
            ]
        }
    },
    "forwardPorts": [],
    // Configure how the dev container should activate
    "remoteUser": "root", // Remove if you want to run as non-root
    "remoteEnv": {
        "PYTHONPATH": "${containerWorkspaceFolder}"
    },
    // Run post-creation commands
    "postCreateCommand": "pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir pytest-cov pre-commit && if [ -f .pre-commit-config.yaml ]; then pre-commit install; fi"
}